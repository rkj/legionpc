/******************************************************************
 * File: settings_scanner.cc
 *
 * This file was automatically generated by CppCC Version 0.0.8
 * DO NOT EDIT MANUALLY
 ******************************************************************/



#include "settings_scanner.hh"

const int cppcc::SettingsScanner::START = 0;
const int cppcc::SettingsScanner::LONG_COMMENT = 1;

void cppcc::SettingsScanner::_brefill () throw (ScanException)
{
  if (!*inputStream) {
    ScanException __ex(ePos, "Input error.");
    if (!onIOError(__ex))
      throw __ex;
  }
  for (struct t_laCell *p = _laBegin; p != _laEnd; p = p->next)
    p->token->_cacheImg();
  if (_start != _ch) {
    if (_start <= _buffer + _pbsz) {
      int nbsz = _pbsz;
      do { nbsz *= 2; } while (nbsz <= _bsz + _pbsz);
      _bsz = nbsz;
      char *newBuf = new char[_bsz + _pbsz + 1];
      memcpy(newBuf + _pbsz, _start, _ch - _start);
      _bol += newBuf + _pbsz - _start;
      _ch += newBuf + _pbsz - _start;
      _start = newBuf + _pbsz;
      delete[] _buffer;
      _buffer = newBuf;
    } else {
      memmove(_buffer + _pbsz, _start, _ch - _start);
      _bol -= _start - (_buffer + _pbsz);
      _ch = _buffer + _pbsz + (_ch - _start);
      _start = _buffer + _pbsz;
    }
  } else {
    _start = _ch = _buffer + _pbsz;
    _bol = _start;
  }
  inputStream->read(_ch, _bsz - (_ch - (_buffer + _pbsz)));
  _eob = _ch + inputStream->gcount();
  *_eob++  = '\0';
  _eof = inputStream->eof();
  _lta = false;
}

void cppcc::SettingsScanner::_binit () throw (ScanException)
{
  if (_buffer == NULL) _buffer = new char[_bsz + _pbsz + 1];
  _start = _ch = _eob = _buffer + _pbsz;
  *_eob++  = '\0';
  _eof = inputStream == NULL;
}
void cppcc::SettingsScanner::unGetChars (const char *c, int n)
{
  if (_start < _buffer + n) { //grow the buffer
    int npbsz = _pbsz, delta = 0;
    for (struct t_laCell *p = _laBegin; p != _laEnd; p = p->next)
      p->token->_cacheImg();
    if (la0 == _laEnd) la0->token->_cacheImg();
    do { npbsz *= 2; delta = npbsz - _pbsz; } while (delta < n);
    char *newBuf = new char[_bsz + npbsz + 1];
    memcpy(newBuf + delta, _start, _eob - _start + 1);
    _bol += newBuf + delta - _start;
    _ch += newBuf + delta - _start;
    _eob += newBuf + delta - _start;
    _start = newBuf + delta;
    _pbsz = npbsz;
    delete[] _buffer;
    _buffer = newBuf;
  }
  memmove(_start - n, _start, n);
  _ch -= n;
  _start -= n;
  _bol -= n;
  memcpy(_ch, c, n);
}

void cppcc::SettingsScanner::_scan (SettingsToken *token) throw (ScanException)
{
  register unsigned char c;
  
  for(;;)
  {
    switch (getState())
    {
    case START:
      __START_0_:
        c = *_ch++;
         /*0*/ if ((c == '\t' /*9*/) || (('\v' /*11*/ <= c) && (c <= '\r' /*13*/)) || (c == ' ' /*32*/))
          goto __START_1_;
        else  /*0*/ if ((c == '\n' /*10*/))
          goto __START_2_;
        else  /*0*/ if ((c == '"' /*34*/))
          goto __START_3_;
        else  /*0*/ if ((c == '(' /*40*/))
          goto __START_4_;
        else  /*0*/ if ((c == ')' /*41*/))
          goto __START_5_;
        else  /*0*/ if ((c == ',' /*44*/))
          goto __START_6_;
        else  /*0*/ if ((c == '-' /*45*/))
          goto __START_7_;
        else  /*0*/ if ((c == '.' /*46*/))
          goto __START_8_;
        else  /*0*/ if ((c == '/' /*47*/))
          goto __START_9_;
        else  /*0*/ if ((c == '0' /*48*/))
          goto __START_10_;
        else  /*0*/ if ((('1' /*49*/ <= c) && (c <= '9' /*57*/)))
          goto __START_11_;
        else  /*0*/ if ((c == '=' /*61*/))
          goto __START_12_;
        else  /*0*/ if ((('A' /*65*/ <= c) && (c <= 'E' /*69*/)) || (('G' /*71*/ <= c) && (c <= 'M' /*77*/)) || (('P' /*80*/ <= c) && (c <= 'S' /*83*/)) || (('U' /*85*/ <= c) && (c <= 'X' /*88*/)) || (c == 'Z' /*90*/) || (c == '_' /*95*/) || (('a' /*97*/ <= c) && (c <= 'e' /*101*/)) || (('g' /*103*/ <= c) && (c <= 'm' /*109*/)) || (('p' /*112*/ <= c) && (c <= 's' /*115*/)) || (('u' /*117*/ <= c) && (c <= 'x' /*120*/)) || (c == 'z' /*122*/))
          goto __START_13_;
        else  /*0*/ if ((c == 'F' /*70*/) || (c == 'f' /*102*/))
          goto __START_14_;
        else  /*0*/ if ((c == 'N' /*78*/) || (c == 'n' /*110*/))
          goto __START_15_;
        else  /*0*/ if ((c == 'O' /*79*/) || (c == 'o' /*111*/))
          goto __START_16_;
        else  /*0*/ if ((c == 'T' /*84*/) || (c == 't' /*116*/))
          goto __START_17_;
        else  /*0*/ if ((c == 'Y' /*89*/) || (c == 'y' /*121*/))
          goto __START_18_;
        else  /*0*/ if ((c == '[' /*91*/))
          goto __START_19_;
        else  /*0*/ if ((c == ']' /*93*/))
          goto __START_20_;
        else  /*0*/ if ((c == '{' /*123*/))
          goto __START_21_;
        else  /*0*/ if ((c == '}' /*125*/))
          goto __START_22_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta)goto __unexpected_eof_;
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_0_;
        }
        goto __scan_error_;
      __START_1_:
        goto __accept_token_ws_;
      __START_2_:
        goto __accept_token_eol_;
      __START_3_:
        c = *_ch++;
         /*0*/ if (((c == '\0') && (_ch != _eob)) || (('\1' /*1*/ <= c) && (c <= '\t' /*9*/)) || (('\v' /*11*/ <= c) && (c <= '!' /*33*/)) || (('#' /*35*/ <= c) && (c <= '[' /*91*/)) || (']' /*93*/ <= c))
          goto __START_3_;
        else  /*0*/ if ((c == '"' /*34*/))
          goto __START_23_;
        else  /*0*/ if ((c == '\\' /*92*/))
          goto __START_24_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta)goto __unexpected_eof_;
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_3_;
        }
        goto __scan_error_;
      __START_4_:
        goto __accept_token_LPAR_;
      __START_5_:
        goto __accept_token_RPAR_;
      __START_6_:
        goto __accept_token_COMMA_;
      __START_7_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)))
          goto __START_11_;
        else  /*0*/ if ((c == '.' /*46*/))
          goto __START_25_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta)goto __unexpected_eof_;
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_7_;
        }
        goto __scan_error_;
      __START_8_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)))
          goto __START_26_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_DOT_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_8_;
        }
        goto __accept_token_DOT_;
      __START_9_:
        c = *_ch++;
         /*0*/ if ((c == '*' /*42*/))
          goto __START_27_;
        else  /*0*/ if ((c == '/' /*47*/))
          goto __START_28_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta)goto __unexpected_eof_;
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_9_;
        }
        goto __scan_error_;
      __START_10_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)))
          goto __START_11_;
        else  /*0*/ if ((c == '.' /*46*/))
          goto __START_29_;
        else  /*0*/ if ((c == 'X' /*88*/) || (c == 'x' /*120*/))
          goto __START_30_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_DEC_CONSTANT_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_10_;
        }
        goto __accept_token_DEC_CONSTANT_;
      __START_11_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)))
          goto __START_11_;
        else  /*0*/ if ((c == '.' /*46*/))
          goto __START_29_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_DEC_CONSTANT_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_11_;
        }
        goto __accept_token_DEC_CONSTANT_;
      __START_12_:
        goto __accept_token_ASSIGN_;
      __START_13_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)) || (('A' /*65*/ <= c) && (c <= 'Z' /*90*/)) || (c == '_' /*95*/) || (('a' /*97*/ <= c) && (c <= 'z' /*122*/)))
          goto __START_13_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_IDENTIFIER_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_13_;
        }
        goto __accept_token_IDENTIFIER_;
      __START_14_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)) || (('B' /*66*/ <= c) && (c <= 'Z' /*90*/)) || (c == '_' /*95*/) || (('b' /*98*/ <= c) && (c <= 'z' /*122*/)))
          goto __START_13_;
        else  /*0*/ if ((c == 'A' /*65*/) || (c == 'a' /*97*/))
          goto __START_31_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_IDENTIFIER_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_14_;
        }
        goto __accept_token_IDENTIFIER_;
      __START_15_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)) || (('A' /*65*/ <= c) && (c <= 'N' /*78*/)) || (('P' /*80*/ <= c) && (c <= 'Z' /*90*/)) || (c == '_' /*95*/) || (('a' /*97*/ <= c) && (c <= 'n' /*110*/)) || (('p' /*112*/ <= c) && (c <= 'z' /*122*/)))
          goto __START_13_;
        else  /*0*/ if ((c == 'O' /*79*/) || (c == 'o' /*111*/))
          goto __START_32_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_IDENTIFIER_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_15_;
        }
        goto __accept_token_IDENTIFIER_;
      __START_16_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)) || (('A' /*65*/ <= c) && (c <= 'E' /*69*/)) || (('G' /*71*/ <= c) && (c <= 'M' /*77*/)) || (('O' /*79*/ <= c) && (c <= 'Z' /*90*/)) || (c == '_' /*95*/) || (('a' /*97*/ <= c) && (c <= 'e' /*101*/)) || (('g' /*103*/ <= c) && (c <= 'm' /*109*/)) || (('o' /*111*/ <= c) && (c <= 'z' /*122*/)))
          goto __START_13_;
        else  /*0*/ if ((c == 'F' /*70*/) || (c == 'f' /*102*/))
          goto __START_33_;
        else  /*0*/ if ((c == 'N' /*78*/) || (c == 'n' /*110*/))
          goto __START_34_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_IDENTIFIER_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_16_;
        }
        goto __accept_token_IDENTIFIER_;
      __START_17_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)) || (('A' /*65*/ <= c) && (c <= 'Q' /*81*/)) || (('S' /*83*/ <= c) && (c <= 'Z' /*90*/)) || (c == '_' /*95*/) || (('a' /*97*/ <= c) && (c <= 'q' /*113*/)) || (('s' /*115*/ <= c) && (c <= 'z' /*122*/)))
          goto __START_13_;
        else  /*0*/ if ((c == 'R' /*82*/) || (c == 'r' /*114*/))
          goto __START_35_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_IDENTIFIER_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_17_;
        }
        goto __accept_token_IDENTIFIER_;
      __START_18_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)) || (('A' /*65*/ <= c) && (c <= 'D' /*68*/)) || (('F' /*70*/ <= c) && (c <= 'Z' /*90*/)) || (c == '_' /*95*/) || (('a' /*97*/ <= c) && (c <= 'd' /*100*/)) || (('f' /*102*/ <= c) && (c <= 'z' /*122*/)))
          goto __START_13_;
        else  /*0*/ if ((c == 'E' /*69*/) || (c == 'e' /*101*/))
          goto __START_36_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_IDENTIFIER_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_18_;
        }
        goto __accept_token_IDENTIFIER_;
      __START_19_:
        goto __accept_token_LSQR_;
      __START_20_:
        goto __accept_token_RSQR_;
      __START_21_:
        goto __accept_token_LBRA_;
      __START_22_:
        goto __accept_token_RBRA_;
      __START_23_:
        goto __accept_token_STRING_LITERAL_;
      __START_24_:
        c = *_ch++;
         /*0*/ if ((c == '"' /*34*/) || (c == '\'' /*39*/) || (c == '?' /*63*/) || (c == '\\' /*92*/) || (('a' /*97*/ <= c) && (c <= 'b' /*98*/)) || (c == 'f' /*102*/) || (c == 'n' /*110*/) || (c == 'r' /*114*/) || (c == 't' /*116*/) || (c == 'v' /*118*/))
          goto __START_3_;
        else  /*0*/ if ((('0' /*48*/ <= c) && (c <= '7' /*55*/)))
          goto __START_37_;
        else  /*0*/ if ((c == 'x' /*120*/))
          goto __START_38_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta)goto __unexpected_eof_;
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_24_;
        }
        goto __scan_error_;
      __START_25_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)))
          goto __START_26_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta)goto __unexpected_eof_;
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_25_;
        }
        goto __scan_error_;
      __START_26_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)))
          goto __START_26_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_FLOAT_CONSTANT_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_26_;
        }
        goto __accept_token_FLOAT_CONSTANT_;
      __START_27_:
        goto __accept_token_LONG_COMMENT1_;
      __START_28_:
        c = *_ch++;
         /*0*/ if (((c == '\0') && (_ch != _eob)) || (('\1' /*1*/ <= c) && (c <= '\t' /*9*/)) || ('\v' /*11*/ <= c))
          goto __START_28_;
        else  /*0*/ if ((c == '\n' /*10*/))
          goto __START_39_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta)goto __unexpected_eof_;
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_28_;
        }
        goto __scan_error_;
      __START_29_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)))
          goto __START_40_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_FLOAT_CONSTANT_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_29_;
        }
        goto __accept_token_FLOAT_CONSTANT_;
      __START_30_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)) || (('A' /*65*/ <= c) && (c <= 'F' /*70*/)) || (('a' /*97*/ <= c) && (c <= 'f' /*102*/)))
          goto __START_41_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta)goto __unexpected_eof_;
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_30_;
        }
        goto __scan_error_;
      __START_31_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)) || (('A' /*65*/ <= c) && (c <= 'K' /*75*/)) || (('M' /*77*/ <= c) && (c <= 'Z' /*90*/)) || (c == '_' /*95*/) || (('a' /*97*/ <= c) && (c <= 'k' /*107*/)) || (('m' /*109*/ <= c) && (c <= 'z' /*122*/)))
          goto __START_13_;
        else  /*0*/ if ((c == 'L' /*76*/) || (c == 'l' /*108*/))
          goto __START_42_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_IDENTIFIER_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_31_;
        }
        goto __accept_token_IDENTIFIER_;
      __START_32_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)) || (('A' /*65*/ <= c) && (c <= 'Z' /*90*/)) || (c == '_' /*95*/) || (('a' /*97*/ <= c) && (c <= 'z' /*122*/)))
          goto __START_13_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_NO_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_32_;
        }
        goto __accept_token_NO_;
      __START_33_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)) || (('A' /*65*/ <= c) && (c <= 'E' /*69*/)) || (('G' /*71*/ <= c) && (c <= 'Z' /*90*/)) || (c == '_' /*95*/) || (('a' /*97*/ <= c) && (c <= 'e' /*101*/)) || (('g' /*103*/ <= c) && (c <= 'z' /*122*/)))
          goto __START_13_;
        else  /*0*/ if ((c == 'F' /*70*/) || (c == 'f' /*102*/))
          goto __START_43_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_IDENTIFIER_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_33_;
        }
        goto __accept_token_IDENTIFIER_;
      __START_34_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)) || (('A' /*65*/ <= c) && (c <= 'Z' /*90*/)) || (c == '_' /*95*/) || (('a' /*97*/ <= c) && (c <= 'z' /*122*/)))
          goto __START_13_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_ON_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_34_;
        }
        goto __accept_token_ON_;
      __START_35_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)) || (('A' /*65*/ <= c) && (c <= 'T' /*84*/)) || (('V' /*86*/ <= c) && (c <= 'Z' /*90*/)) || (c == '_' /*95*/) || (('a' /*97*/ <= c) && (c <= 't' /*116*/)) || (('v' /*118*/ <= c) && (c <= 'z' /*122*/)))
          goto __START_13_;
        else  /*0*/ if ((c == 'U' /*85*/) || (c == 'u' /*117*/))
          goto __START_44_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_IDENTIFIER_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_35_;
        }
        goto __accept_token_IDENTIFIER_;
      __START_36_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)) || (('A' /*65*/ <= c) && (c <= 'R' /*82*/)) || (('T' /*84*/ <= c) && (c <= 'Z' /*90*/)) || (c == '_' /*95*/) || (('a' /*97*/ <= c) && (c <= 'r' /*114*/)) || (('t' /*116*/ <= c) && (c <= 'z' /*122*/)))
          goto __START_13_;
        else  /*0*/ if ((c == 'S' /*83*/) || (c == 's' /*115*/))
          goto __START_45_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_IDENTIFIER_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_36_;
        }
        goto __accept_token_IDENTIFIER_;
      __START_37_:
        c = *_ch++;
         /*0*/ if (((c == '\0') && (_ch != _eob)) || (('\1' /*1*/ <= c) && (c <= '\t' /*9*/)) || (('\v' /*11*/ <= c) && (c <= '!' /*33*/)) || (('#' /*35*/ <= c) && (c <= '/' /*47*/)) || (('8' /*56*/ <= c) && (c <= '[' /*91*/)) || (']' /*93*/ <= c))
          goto __START_3_;
        else  /*0*/ if ((c == '"' /*34*/))
          goto __START_23_;
        else  /*0*/ if ((c == '\\' /*92*/))
          goto __START_24_;
        else  /*0*/ if ((('0' /*48*/ <= c) && (c <= '7' /*55*/)))
          goto __START_46_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta)goto __unexpected_eof_;
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_37_;
        }
        goto __scan_error_;
      __START_38_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)) || (('A' /*65*/ <= c) && (c <= 'F' /*70*/)) || (('a' /*97*/ <= c) && (c <= 'f' /*102*/)))
          goto __START_47_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta)goto __unexpected_eof_;
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_38_;
        }
        goto __scan_error_;
      __START_39_:
        goto __accept_token_EOL_COMMENT_;
      __START_40_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)))
          goto __START_40_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_FLOAT_CONSTANT_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_40_;
        }
        goto __accept_token_FLOAT_CONSTANT_;
      __START_41_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)) || (('A' /*65*/ <= c) && (c <= 'F' /*70*/)) || (('a' /*97*/ <= c) && (c <= 'f' /*102*/)))
          goto __START_41_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_HEX_CONSTANT_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_41_;
        }
        goto __accept_token_HEX_CONSTANT_;
      __START_42_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)) || (('A' /*65*/ <= c) && (c <= 'R' /*82*/)) || (('T' /*84*/ <= c) && (c <= 'Z' /*90*/)) || (c == '_' /*95*/) || (('a' /*97*/ <= c) && (c <= 'r' /*114*/)) || (('t' /*116*/ <= c) && (c <= 'z' /*122*/)))
          goto __START_13_;
        else  /*0*/ if ((c == 'S' /*83*/) || (c == 's' /*115*/))
          goto __START_48_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_IDENTIFIER_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_42_;
        }
        goto __accept_token_IDENTIFIER_;
      __START_43_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)) || (('A' /*65*/ <= c) && (c <= 'Z' /*90*/)) || (c == '_' /*95*/) || (('a' /*97*/ <= c) && (c <= 'z' /*122*/)))
          goto __START_13_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_OFF_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_43_;
        }
        goto __accept_token_OFF_;
      __START_44_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)) || (('A' /*65*/ <= c) && (c <= 'D' /*68*/)) || (('F' /*70*/ <= c) && (c <= 'Z' /*90*/)) || (c == '_' /*95*/) || (('a' /*97*/ <= c) && (c <= 'd' /*100*/)) || (('f' /*102*/ <= c) && (c <= 'z' /*122*/)))
          goto __START_13_;
        else  /*0*/ if ((c == 'E' /*69*/) || (c == 'e' /*101*/))
          goto __START_49_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_IDENTIFIER_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_44_;
        }
        goto __accept_token_IDENTIFIER_;
      __START_45_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)) || (('A' /*65*/ <= c) && (c <= 'Z' /*90*/)) || (c == '_' /*95*/) || (('a' /*97*/ <= c) && (c <= 'z' /*122*/)))
          goto __START_13_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_YES_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_45_;
        }
        goto __accept_token_YES_;
      __START_46_:
        c = *_ch++;
         /*0*/ if (((c == '\0') && (_ch != _eob)) || (('\1' /*1*/ <= c) && (c <= '\t' /*9*/)) || (('\v' /*11*/ <= c) && (c <= '!' /*33*/)) || (('#' /*35*/ <= c) && (c <= '[' /*91*/)) || (']' /*93*/ <= c))
          goto __START_3_;
        else  /*0*/ if ((c == '"' /*34*/))
          goto __START_23_;
        else  /*0*/ if ((c == '\\' /*92*/))
          goto __START_24_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta)goto __unexpected_eof_;
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_46_;
        }
        goto __scan_error_;
      __START_47_:
        c = *_ch++;
         /*0*/ if (((c == '\0') && (_ch != _eob)) || (('\1' /*1*/ <= c) && (c <= '\t' /*9*/)) || (('\v' /*11*/ <= c) && (c <= '!' /*33*/)) || (('#' /*35*/ <= c) && (c <= '/' /*47*/)) || ((':' /*58*/ <= c) && (c <= '@' /*64*/)) || (('G' /*71*/ <= c) && (c <= '[' /*91*/)) || ((']' /*93*/ <= c) && (c <= '`' /*96*/)) || ('g' /*103*/ <= c))
          goto __START_3_;
        else  /*0*/ if ((c == '"' /*34*/))
          goto __START_23_;
        else  /*0*/ if ((c == '\\' /*92*/))
          goto __START_24_;
        else  /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)) || (('A' /*65*/ <= c) && (c <= 'F' /*70*/)) || (('a' /*97*/ <= c) && (c <= 'f' /*102*/)))
          goto __START_47_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta)goto __unexpected_eof_;
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_47_;
        }
        goto __scan_error_;
      __START_48_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)) || (('A' /*65*/ <= c) && (c <= 'D' /*68*/)) || (('F' /*70*/ <= c) && (c <= 'Z' /*90*/)) || (c == '_' /*95*/) || (('a' /*97*/ <= c) && (c <= 'd' /*100*/)) || (('f' /*102*/ <= c) && (c <= 'z' /*122*/)))
          goto __START_13_;
        else  /*0*/ if ((c == 'E' /*69*/) || (c == 'e' /*101*/))
          goto __START_50_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_IDENTIFIER_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_48_;
        }
        goto __accept_token_IDENTIFIER_;
      __START_49_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)) || (('A' /*65*/ <= c) && (c <= 'Z' /*90*/)) || (c == '_' /*95*/) || (('a' /*97*/ <= c) && (c <= 'z' /*122*/)))
          goto __START_13_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_TRUE_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_49_;
        }
        goto __accept_token_TRUE_;
      __START_50_:
        c = *_ch++;
         /*0*/ if ((('0' /*48*/ <= c) && (c <= '9' /*57*/)) || (('A' /*65*/ <= c) && (c <= 'Z' /*90*/)) || (c == '_' /*95*/) || (('a' /*97*/ <= c) && (c <= 'z' /*122*/)))
          goto __START_13_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_FALSE_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __START_50_;
        }
        goto __accept_token_FALSE_;
    case LONG_COMMENT:
      __LONG_COMMENT_0_:
        c = *_ch++;
         /*0*/ if (((c == '\0') && (_ch != _eob)) || (('\1' /*1*/ <= c) && (c <= '\t' /*9*/)) || (('\v' /*11*/ <= c) && (c <= '\f' /*12*/)) || (('\16' /*14*/ <= c) && (c <= ')' /*41*/)) || ('+' /*43*/ <= c))
          goto __LONG_COMMENT_1_;
        else  /*0*/ if ((c == '\n' /*10*/))
          goto __LONG_COMMENT_2_;
        else  /*0*/ if ((c == '*' /*42*/))
          goto __LONG_COMMENT_3_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_LONG_COMMENT3_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __LONG_COMMENT_0_;
        }
        goto __accept_token_LONG_COMMENT3_;
      __LONG_COMMENT_1_:
        c = *_ch++;
         /*0*/ if (((c == '\0') && (_ch != _eob)) || (('\1' /*1*/ <= c) && (c <= '\t' /*9*/)) || (('\v' /*11*/ <= c) && (c <= '\f' /*12*/)) || (('\16' /*14*/ <= c) && (c <= ')' /*41*/)) || ('+' /*43*/ <= c))
          goto __LONG_COMMENT_1_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_LONG_COMMENT3_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __LONG_COMMENT_1_;
        }
        goto __accept_token_LONG_COMMENT3_;
      __LONG_COMMENT_2_:
        goto __accept_token_LONG_COMMENT2_;
      __LONG_COMMENT_3_:
        c = *_ch++;
         /*0*/ if (((c == '\0') && (_ch != _eob)) || (('\1' /*1*/ <= c) && (c <= '\t' /*9*/)) || (('\v' /*11*/ <= c) && (c <= ')' /*41*/)) || (('+' /*43*/ <= c) && (c <= '.' /*46*/)) || ('0' /*48*/ <= c))
          goto __LONG_COMMENT_4_;
        else  /*0*/ if ((c == '\n' /*10*/))
          goto __LONG_COMMENT_5_;
        else  /*0*/ if ((c == '*' /*42*/))
          goto __LONG_COMMENT_6_;
        else  /*0*/ if ((c == '/' /*47*/))
          goto __LONG_COMMENT_7_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta)goto __unexpected_eof_;
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __LONG_COMMENT_3_;
        }
        goto __scan_error_;
      __LONG_COMMENT_4_:
        goto __accept_token_LONG_COMMENT4_;
      __LONG_COMMENT_5_:
        goto __accept_token_LONG_COMMENT5_;
      __LONG_COMMENT_6_:
        c = *_ch++;
         /*0*/ if (((c == '\0') && (_ch != _eob)) || (('\1' /*1*/ <= c) && (c <= '\t' /*9*/)) || (('\v' /*11*/ <= c) && (c <= ')' /*41*/)) || (('+' /*43*/ <= c) && (c <= '.' /*46*/)) || ('0' /*48*/ <= c))
          goto __LONG_COMMENT_4_;
        else  /*0*/ if ((c == '\n' /*10*/))
          goto __LONG_COMMENT_5_;
        else  /*0*/ if ((c == '*' /*42*/))
          goto __LONG_COMMENT_6_;
        else  /*0*/ if ((c == '/' /*47*/))
          goto __LONG_COMMENT_7_;
        if ((_ch-- == _eob) && (c == '\0')) {
          if (_eof) {
            if ((_ch != _start) && !_lta){ _lta = true; goto __accept_token_LONG_COMMENT4_; }
            if (!wrap()) goto __eof_seen_;
          }
          if (_ch + 1 == _eob) _brefill();
          goto __LONG_COMMENT_6_;
        }
        goto __accept_token_LONG_COMMENT4_;
      __LONG_COMMENT_7_:
        goto __accept_token_LONG_COMMENT_;
    default:
      {
        ScanException __ex(ePos, "Illegal lexical state");
        if (!onScanError(__ex))
          throw __ex;
      }
    }
    
    __accept_token_ws_:
      ePos.col += _ch - _bol;
      _bol = _ch;
      _start = _ch;
      bPos = ePos;
      continue;
    __accept_token_eol_:
      ePos.col += _ch - _bol;
      _bol = _ch;
      token->_set(SettingsToken::eol, bPos, ePos, _start, _ch - _start);
      {
#line 30 "settings.cg"
 newLine(); 
#line 817 "settings_scanner.cc"

      }
      _start = _ch;
      bPos = ePos;
      continue;
    __accept_token_LONG_COMMENT1_:
      ePos.col += _ch - _bol;
      _bol = _ch;
      token->_set(SettingsToken::LONG_COMMENT1, bPos, ePos, _start, _ch - _start);
      _more = true;
      {
#line 35 "settings.cg"
 pushState(LONG_COMMENT); 
#line 831 "settings_scanner.cc"

      }
      _more = false;
      continue;
    __accept_token_LONG_COMMENT2_:
      ePos.col += _ch - _bol;
      _bol = _ch;
      token->_set(SettingsToken::LONG_COMMENT2, bPos, ePos, _start, _ch - _start);
      _more = true;
      {
#line 40 "settings.cg"
 newLine(); 
#line 844 "settings_scanner.cc"

      }
      _more = false;
      continue;
    __accept_token_LONG_COMMENT3_:
      continue;
    __accept_token_LONG_COMMENT4_:
      continue;
    __accept_token_LONG_COMMENT5_:
      ePos.col += _ch - _bol;
      _bol = _ch;
      token->_set(SettingsToken::LONG_COMMENT5, bPos, ePos, _start, _ch - _start);
      _more = true;
      {
#line 43 "settings.cg"
 newLine(); 
#line 861 "settings_scanner.cc"

      }
      _more = false;
      continue;
    __accept_token_LONG_COMMENT_:
      ePos.col += _ch - _bol;
      _bol = _ch;
      token->_set(SettingsToken::LONG_COMMENT, bPos, ePos, _start, _ch - _start);
      {
#line 48 "settings.cg"
 popState(); 
#line 873 "settings_scanner.cc"

      }
      _start = _ch;
      bPos = ePos;
      continue;
    __accept_token_EOL_COMMENT_:
      ePos.col += _ch - _bol;
      _bol = _ch;
      token->_set(SettingsToken::EOL_COMMENT, bPos, ePos, _start, _ch - _start);
      {
#line 53 "settings.cg"
 newLine(); 
#line 886 "settings_scanner.cc"

      }
      _start = _ch;
      bPos = ePos;
      continue;
    __accept_token_LBRA_:
      {
        token->id = SettingsToken::LBRA;
        ePos.col += _ch - _bol;
        _bol = _ch;
        token->bPos = bPos;
        token->ePos = ePos;
        commonTokenAction (*token);
        bPos = ePos;
        _start = _ch;
        if (_reject) { _reject = false; continue; }
        else return;
      }
    __accept_token_RBRA_:
      {
        token->id = SettingsToken::RBRA;
        ePos.col += _ch - _bol;
        _bol = _ch;
        token->bPos = bPos;
        token->ePos = ePos;
        commonTokenAction (*token);
        bPos = ePos;
        _start = _ch;
        if (_reject) { _reject = false; continue; }
        else return;
      }
    __accept_token_LPAR_:
      {
        token->id = SettingsToken::LPAR;
        ePos.col += _ch - _bol;
        _bol = _ch;
        token->bPos = bPos;
        token->ePos = ePos;
        commonTokenAction (*token);
        bPos = ePos;
        _start = _ch;
        if (_reject) { _reject = false; continue; }
        else return;
      }
    __accept_token_RPAR_:
      {
        token->id = SettingsToken::RPAR;
        ePos.col += _ch - _bol;
        _bol = _ch;
        token->bPos = bPos;
        token->ePos = ePos;
        commonTokenAction (*token);
        bPos = ePos;
        _start = _ch;
        if (_reject) { _reject = false; continue; }
        else return;
      }
    __accept_token_LSQR_:
      {
        token->id = SettingsToken::LSQR;
        ePos.col += _ch - _bol;
        _bol = _ch;
        token->bPos = bPos;
        token->ePos = ePos;
        commonTokenAction (*token);
        bPos = ePos;
        _start = _ch;
        if (_reject) { _reject = false; continue; }
        else return;
      }
    __accept_token_RSQR_:
      {
        token->id = SettingsToken::RSQR;
        ePos.col += _ch - _bol;
        _bol = _ch;
        token->bPos = bPos;
        token->ePos = ePos;
        commonTokenAction (*token);
        bPos = ePos;
        _start = _ch;
        if (_reject) { _reject = false; continue; }
        else return;
      }
    __accept_token_DOT_:
      {
        token->id = SettingsToken::DOT;
        ePos.col += _ch - _bol;
        _bol = _ch;
        token->bPos = bPos;
        token->ePos = ePos;
        commonTokenAction (*token);
        bPos = ePos;
        _start = _ch;
        if (_reject) { _reject = false; continue; }
        else return;
      }
    __accept_token_COMMA_:
      {
        token->id = SettingsToken::COMMA;
        ePos.col += _ch - _bol;
        _bol = _ch;
        token->bPos = bPos;
        token->ePos = ePos;
        commonTokenAction (*token);
        bPos = ePos;
        _start = _ch;
        if (_reject) { _reject = false; continue; }
        else return;
      }
    __accept_token_ASSIGN_:
      {
        token->id = SettingsToken::ASSIGN;
        ePos.col += _ch - _bol;
        _bol = _ch;
        token->bPos = bPos;
        token->ePos = ePos;
        commonTokenAction (*token);
        bPos = ePos;
        _start = _ch;
        if (_reject) { _reject = false; continue; }
        else return;
      }
    __accept_token_HEX_CONSTANT_:
      {
        ePos.col += _ch - _bol;
        _bol = _ch;
        token->_set(SettingsToken::HEX_CONSTANT, bPos, ePos, _start, _ch - _start);
        commonTokenAction (*token);
        bPos = ePos;
        _start = _ch;
        if (_reject) { _reject = false; continue; }
        else return;
      }
    __accept_token_DEC_CONSTANT_:
      {
        ePos.col += _ch - _bol;
        _bol = _ch;
        token->_set(SettingsToken::DEC_CONSTANT, bPos, ePos, _start, _ch - _start);
        commonTokenAction (*token);
        bPos = ePos;
        _start = _ch;
        if (_reject) { _reject = false; continue; }
        else return;
      }
    __accept_token_FLOAT_CONSTANT_:
      {
        ePos.col += _ch - _bol;
        _bol = _ch;
        token->_set(SettingsToken::FLOAT_CONSTANT, bPos, ePos, _start, _ch - _start);
        commonTokenAction (*token);
        bPos = ePos;
        _start = _ch;
        if (_reject) { _reject = false; continue; }
        else return;
      }
    __accept_token_STRING_LITERAL_:
      {
        ePos.col += _ch - _bol;
        _bol = _ch;
        token->_set(SettingsToken::STRING_LITERAL, bPos, ePos, _start, _ch - _start);
        commonTokenAction (*token);
        bPos = ePos;
        _start = _ch;
        if (_reject) { _reject = false; continue; }
        else return;
      }
    __accept_token_YES_:
      {
        ePos.col += _ch - _bol;
        _bol = _ch;
        token->_set(SettingsToken::YES, bPos, ePos, _start, _ch - _start);
        commonTokenAction (*token);
        bPos = ePos;
        _start = _ch;
        if (_reject) { _reject = false; continue; }
        else return;
      }
    __accept_token_NO_:
      {
        ePos.col += _ch - _bol;
        _bol = _ch;
        token->_set(SettingsToken::NO, bPos, ePos, _start, _ch - _start);
        commonTokenAction (*token);
        bPos = ePos;
        _start = _ch;
        if (_reject) { _reject = false; continue; }
        else return;
      }
    __accept_token_ON_:
      {
        ePos.col += _ch - _bol;
        _bol = _ch;
        token->_set(SettingsToken::ON, bPos, ePos, _start, _ch - _start);
        commonTokenAction (*token);
        bPos = ePos;
        _start = _ch;
        if (_reject) { _reject = false; continue; }
        else return;
      }
    __accept_token_OFF_:
      {
        ePos.col += _ch - _bol;
        _bol = _ch;
        token->_set(SettingsToken::OFF, bPos, ePos, _start, _ch - _start);
        commonTokenAction (*token);
        bPos = ePos;
        _start = _ch;
        if (_reject) { _reject = false; continue; }
        else return;
      }
    __accept_token_TRUE_:
      {
        ePos.col += _ch - _bol;
        _bol = _ch;
        token->_set(SettingsToken::TRUE, bPos, ePos, _start, _ch - _start);
        commonTokenAction (*token);
        bPos = ePos;
        _start = _ch;
        if (_reject) { _reject = false; continue; }
        else return;
      }
    __accept_token_FALSE_:
      {
        ePos.col += _ch - _bol;
        _bol = _ch;
        token->_set(SettingsToken::FALSE, bPos, ePos, _start, _ch - _start);
        commonTokenAction (*token);
        bPos = ePos;
        _start = _ch;
        if (_reject) { _reject = false; continue; }
        else return;
      }
    __accept_token_IDENTIFIER_:
      {
        ePos.col += _ch - _bol;
        _bol = _ch;
        token->_set(SettingsToken::IDENTIFIER, bPos, ePos, _start, _ch - _start);
        commonTokenAction (*token);
        bPos = ePos;
        _start = _ch;
        if (_reject) { _reject = false; continue; }
        else return;
      }
    __scan_error_:
      {
        std::string msg = std::string("Unexpected character \'") + (char) c + "\'.";
        ScanException __ex(ePos, msg);
        if (!onScanError(__ex))
          throw __ex;
      }
    __unexpected_eof_:
      {
        std::string msg("Unexpected EOF.");
        ScanException __ex(ePos, msg);
        if (!onScanError(__ex))
          throw __ex;
      }
      __eof_seen_:
        token->id = SettingsToken::eof;
        token->bPos = bPos;
        token->ePos = ePos;
        return;
  }
}



/* End of file. */
